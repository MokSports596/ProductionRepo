// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MokSportsApp.Data;

#nullable disable

namespace MokSportsApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250612235223_AddLeaguesByWeek")]
    partial class AddLeaguesByWeek
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MokSportsApp.DTO.GameFranchiseDTO", b =>
                {
                    b.Property<string>("AwayFranchise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AwayPoints")
                        .HasColumnType("int");

                    b.Property<string>("AwayTeam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ESPNLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeFranchise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HomePoints")
                        .HasColumnType("int");

                    b.Property<string>("HomeTeam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter1")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter2")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter3")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter4")
                        .HasColumnType("int");

                    b.Property<int>("Season")
                        .HasColumnType("int");

                    b.Property<string>("SeasonType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SportsBookOdds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalPoints")
                        .HasColumnType("int");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("MokSportsApp.Models.Draft", b =>
                {
                    b.Property<int>("DraftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DraftId"));

                    b.Property<int>("CurrentPickIndex")
                        .HasColumnType("int");

                    b.Property<int>("CurrentRound")
                        .HasColumnType("int");

                    b.Property<string>("DraftOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.HasKey("DraftId");

                    b.HasIndex("LeagueId");

                    b.ToTable("Drafts", (string)null);
                });

            modelBuilder.Entity("MokSportsApp.Models.DraftPick", b =>
                {
                    b.Property<int>("DraftPickId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DraftPickId"));

                    b.Property<int>("DraftId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("PickOrder")
                        .HasColumnType("int");

                    b.Property<DateTime>("PickTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("DraftPickId");

                    b.HasIndex("DraftId");

                    b.HasIndex("FranchiseId");

                    b.HasIndex("TeamId");

                    b.ToTable("DraftPicks", (string)null);
                });

            modelBuilder.Entity("MokSportsApp.Models.Franchise", b =>
                {
                    b.Property<int>("FranchiseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FranchiseId"));

                    b.Property<string>("FranchiseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FranchiseName");

                    b.Property<bool?>("HasLoad")
                        .HasColumnType("bit");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonPoints")
                        .HasColumnType("int");

                    b.Property<int?>("Team1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Team1LoksLeft")
                        .HasColumnType("int");

                    b.Property<int?>("Team2Id")
                        .HasColumnType("int");

                    b.Property<int?>("Team2LoksLeft")
                        .HasColumnType("int");

                    b.Property<int?>("Team3Id")
                        .HasColumnType("int");

                    b.Property<int?>("Team3LoksLeft")
                        .HasColumnType("int");

                    b.Property<int?>("Team4Id")
                        .HasColumnType("int");

                    b.Property<int?>("Team4LoksLeft")
                        .HasColumnType("int");

                    b.Property<int?>("Team5Id")
                        .HasColumnType("int");

                    b.Property<int?>("Team5LoksLeft")
                        .HasColumnType("int");

                    b.Property<int?>("TotalSkinsWon")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId");

                    b.HasIndex("LeagueId");

                    b.HasIndex("Team1Id");

                    b.HasIndex("Team2Id");

                    b.HasIndex("Team3Id");

                    b.HasIndex("Team4Id");

                    b.HasIndex("Team5Id");

                    b.HasIndex("UserId");

                    b.ToTable("Franchises", (string)null);
                });

            modelBuilder.Entity("MokSportsApp.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AwayPoints")
                        .HasColumnType("int");

                    b.Property<string>("AwayTeam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ESPNLink")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GameStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GameTime")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("HomePoints")
                        .HasColumnType("int");

                    b.Property<string>("HomeTeam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Quarter1")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter2")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter3")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter4")
                        .HasColumnType("int");

                    b.Property<int>("Season")
                        .HasColumnType("int");

                    b.Property<string>("SeasonType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SportsBookOdds")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TotalPoints")
                        .HasColumnType("int");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Games", (string)null);
                });

            modelBuilder.Entity("MokSportsApp.Models.League", b =>
                {
                    b.Property<int>("LeagueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LeagueId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeagueId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pin");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.HasKey("LeagueId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Leagues", (string)null);
                });

            modelBuilder.Entity("MokSportsApp.Models.LeaguesByWeek", b =>
                {
                    b.Property<int>("LeagueId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("WeekId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("Franchise1Id")
                        .HasColumnType("int");

                    b.Property<int>("Franchise1SeasonPoints")
                        .HasColumnType("int");

                    b.Property<int>("Franchise1WeeklyPoints")
                        .HasColumnType("int");

                    b.Property<int?>("Franchise2Id")
                        .HasColumnType("int");

                    b.Property<int>("Franchise2SeasonPoints")
                        .HasColumnType("int");

                    b.Property<int>("Franchise2WeeklyPoints")
                        .HasColumnType("int");

                    b.Property<int?>("Franchise3Id")
                        .HasColumnType("int");

                    b.Property<int>("Franchise3SeasonPoints")
                        .HasColumnType("int");

                    b.Property<int>("Franchise3WeeklyPoints")
                        .HasColumnType("int");

                    b.Property<int?>("Franchise4Id")
                        .HasColumnType("int");

                    b.Property<int>("Franchise4SeasonPoints")
                        .HasColumnType("int");

                    b.Property<int>("Franchise4WeeklyPoints")
                        .HasColumnType("int");

                    b.Property<int?>("Franchise5Id")
                        .HasColumnType("int");

                    b.Property<int>("Franchise5SeasonPoints")
                        .HasColumnType("int");

                    b.Property<int>("Franchise5WeeklyPoints")
                        .HasColumnType("int");

                    b.Property<int>("SkinsInPlay")
                        .HasColumnType("int");

                    b.Property<int?>("WeeklyRank1FranchiseId")
                        .HasColumnType("int");

                    b.Property<int?>("WeeklyRank2FranchiseId")
                        .HasColumnType("int");

                    b.Property<int?>("WeeklyRank3FranchiseId")
                        .HasColumnType("int");

                    b.Property<int?>("WeeklyRank4FranchiseId")
                        .HasColumnType("int");

                    b.Property<int?>("WeeklyRank5FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("LeagueId", "WeekId");

                    b.HasIndex("Franchise1Id");

                    b.HasIndex("Franchise2Id");

                    b.HasIndex("Franchise3Id");

                    b.HasIndex("Franchise4Id");

                    b.HasIndex("Franchise5Id");

                    b.HasIndex("WeeklyRank1FranchiseId");

                    b.HasIndex("WeeklyRank2FranchiseId");

                    b.HasIndex("WeeklyRank3FranchiseId");

                    b.HasIndex("WeeklyRank4FranchiseId");

                    b.HasIndex("WeeklyRank5FranchiseId");

                    b.ToTable("LeaguesByWeek", (string)null);
                });

            modelBuilder.Entity("MokSportsApp.Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("MokSportsApp.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ties")
                        .HasColumnType("int");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("TeamId");

                    b.ToTable("Teams", (string)null);
                });

            modelBuilder.Entity("MokSportsApp.Models.TradeTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TeamIdToTrade")
                        .HasColumnType("int");

                    b.Property<int>("TeamIdWithTrade")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TradeClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TradedWithFreeTeam")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TradeTeams");
                });

            modelBuilder.Entity("MokSportsApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password_hash");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password_salt");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("MokSportsApp.Models.UserDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserDevices");
                });

            modelBuilder.Entity("MokSportsApp.Models.UserLeague", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LeagueId")
                        .HasColumnType("int")
                        .HasColumnName("league_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.HasIndex("UserId");

                    b.ToTable("UserLeagues", (string)null);
                });

            modelBuilder.Entity("MokSportsApp.Models.UserStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int")
                        .HasColumnName("LeagueId");

                    b.Property<int>("LoksUsed")
                        .HasColumnType("int")
                        .HasColumnName("LoksUsed");

                    b.Property<int>("SeasonPoints")
                        .HasColumnType("int")
                        .HasColumnName("SeasonPoints");

                    b.Property<int>("Skins")
                        .HasColumnType("int")
                        .HasColumnName("Skins");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<int>("WeekId")
                        .HasColumnType("int")
                        .HasColumnName("WeekId");

                    b.Property<int>("WeekPoints")
                        .HasColumnType("int")
                        .HasColumnName("WeekPoints");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.HasIndex("UserId");

                    b.HasIndex("WeekId");

                    b.ToTable("UserStats", (string)null);
                });

            modelBuilder.Entity("MokSportsApp.Models.Week", b =>
                {
                    b.Property<int>("WeekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WeekId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.HasKey("WeekId");

                    b.ToTable("Weeks");
                });

            modelBuilder.Entity("MokSportsApp.Models.Draft", b =>
                {
                    b.HasOne("MokSportsApp.Models.League", "League")
                        .WithMany("Drafts")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");
                });

            modelBuilder.Entity("MokSportsApp.Models.DraftPick", b =>
                {
                    b.HasOne("MokSportsApp.Models.Draft", "Draft")
                        .WithMany("DraftPicks")
                        .HasForeignKey("DraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MokSportsApp.Models.Franchise", "Franchise")
                        .WithMany("DraftPicks")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MokSportsApp.Models.Team", "Team")
                        .WithMany("DraftPicks")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Draft");

                    b.Navigation("Franchise");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("MokSportsApp.Models.Franchise", b =>
                {
                    b.HasOne("MokSportsApp.Models.League", "League")
                        .WithMany("Franchises")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MokSportsApp.Models.Team", "Team1")
                        .WithMany()
                        .HasForeignKey("Team1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.Team", "Team2")
                        .WithMany()
                        .HasForeignKey("Team2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.Team", "Team3")
                        .WithMany()
                        .HasForeignKey("Team3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.Team", "Team4")
                        .WithMany()
                        .HasForeignKey("Team4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.Team", "Team5")
                        .WithMany()
                        .HasForeignKey("Team5Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.User", "User")
                        .WithMany("Franchises")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");

                    b.Navigation("Team1");

                    b.Navigation("Team2");

                    b.Navigation("Team3");

                    b.Navigation("Team4");

                    b.Navigation("Team5");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MokSportsApp.Models.League", b =>
                {
                    b.HasOne("MokSportsApp.Models.Season", "SeasonFK")
                        .WithMany()
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SeasonFK");
                });

            modelBuilder.Entity("MokSportsApp.Models.LeaguesByWeek", b =>
                {
                    b.HasOne("MokSportsApp.Models.Franchise", "Franchise1")
                        .WithMany()
                        .HasForeignKey("Franchise1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.Franchise", "Franchise2")
                        .WithMany()
                        .HasForeignKey("Franchise2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.Franchise", "Franchise3")
                        .WithMany()
                        .HasForeignKey("Franchise3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.Franchise", "Franchise4")
                        .WithMany()
                        .HasForeignKey("Franchise4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.Franchise", "Franchise5")
                        .WithMany()
                        .HasForeignKey("Franchise5Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.Franchise", "WeeklyRank1Franchise")
                        .WithMany()
                        .HasForeignKey("WeeklyRank1FranchiseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.Franchise", "WeeklyRank2Franchise")
                        .WithMany()
                        .HasForeignKey("WeeklyRank2FranchiseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.Franchise", "WeeklyRank3Franchise")
                        .WithMany()
                        .HasForeignKey("WeeklyRank3FranchiseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.Franchise", "WeeklyRank4Franchise")
                        .WithMany()
                        .HasForeignKey("WeeklyRank4FranchiseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MokSportsApp.Models.Franchise", "WeeklyRank5Franchise")
                        .WithMany()
                        .HasForeignKey("WeeklyRank5FranchiseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Franchise1");

                    b.Navigation("Franchise2");

                    b.Navigation("Franchise3");

                    b.Navigation("Franchise4");

                    b.Navigation("Franchise5");

                    b.Navigation("WeeklyRank1Franchise");

                    b.Navigation("WeeklyRank2Franchise");

                    b.Navigation("WeeklyRank3Franchise");

                    b.Navigation("WeeklyRank4Franchise");

                    b.Navigation("WeeklyRank5Franchise");
                });

            modelBuilder.Entity("MokSportsApp.Models.UserDevice", b =>
                {
                    b.HasOne("MokSportsApp.Models.User", "UserFk")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserFk");
                });

            modelBuilder.Entity("MokSportsApp.Models.UserLeague", b =>
                {
                    b.HasOne("MokSportsApp.Models.League", "League")
                        .WithMany("UserLeagues")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MokSportsApp.Models.User", "User")
                        .WithMany("UserLeagues")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MokSportsApp.Models.UserStats", b =>
                {
                    b.HasOne("MokSportsApp.Models.League", "League")
                        .WithMany("UserStats")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MokSportsApp.Models.User", "User")
                        .WithMany("UserStats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MokSportsApp.Models.Week", "Week")
                        .WithMany("UserStats")
                        .HasForeignKey("WeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");

                    b.Navigation("User");

                    b.Navigation("Week");
                });

            modelBuilder.Entity("MokSportsApp.Models.Draft", b =>
                {
                    b.Navigation("DraftPicks");
                });

            modelBuilder.Entity("MokSportsApp.Models.Franchise", b =>
                {
                    b.Navigation("DraftPicks");
                });

            modelBuilder.Entity("MokSportsApp.Models.League", b =>
                {
                    b.Navigation("Drafts");

                    b.Navigation("Franchises");

                    b.Navigation("UserLeagues");

                    b.Navigation("UserStats");
                });

            modelBuilder.Entity("MokSportsApp.Models.Team", b =>
                {
                    b.Navigation("DraftPicks");
                });

            modelBuilder.Entity("MokSportsApp.Models.User", b =>
                {
                    b.Navigation("Franchises");

                    b.Navigation("UserLeagues");

                    b.Navigation("UserStats");
                });

            modelBuilder.Entity("MokSportsApp.Models.Week", b =>
                {
                    b.Navigation("UserStats");
                });
#pragma warning restore 612, 618
        }
    }
}
